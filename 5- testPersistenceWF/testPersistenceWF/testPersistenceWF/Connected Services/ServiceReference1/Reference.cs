//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace testPersistenceWF.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddItem", Namespace="http://tempuri.org/")]
    [System.SerializableAttribute()]
    public partial class AddItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pItemNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pOrderId {
            get {
                return this.pOrderIdField;
            }
            set {
                if ((object.ReferenceEquals(this.pOrderIdField, value) != true)) {
                    this.pOrderIdField = value;
                    this.RaisePropertyChanged("pOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public string pItemName {
            get {
                return this.pItemNameField;
            }
            set {
                if ((object.ReferenceEquals(this.pItemNameField, value) != true)) {
                    this.pItemNameField = value;
                    this.RaisePropertyChanged("pItemName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IStartOrder")]
    public interface IStartOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStartOrder/StartOrder", ReplyAction="http://tempuri.org/IStartOrder/StartOrderResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pOrderId")]
        string StartOrder(string pCustomerName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStartOrder/StartOrder", ReplyAction="http://tempuri.org/IStartOrder/StartOrderResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="pOrderId")]
        System.Threading.Tasks.Task<string> StartOrderAsync(string pCustomerName);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStartOrderChannel : testPersistenceWF.ServiceReference1.IStartOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StartOrderClient : System.ServiceModel.ClientBase<testPersistenceWF.ServiceReference1.IStartOrder>, testPersistenceWF.ServiceReference1.IStartOrder {
        
        public StartOrderClient() {
        }
        
        public StartOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StartOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StartOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StartOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string StartOrder(string pCustomerName) {
            return base.Channel.StartOrder(pCustomerName);
        }
        
        public System.Threading.Tasks.Task<string> StartOrderAsync(string pCustomerName) {
            return base.Channel.StartOrderAsync(pCustomerName);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IAddItem")]
    public interface IAddItem {
        
        // CODEGEN: Generating message contract since the operation AddItem is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddItem/AddItem", ReplyAction="http://tempuri.org/IAddItem/AddItemResponse")]
        testPersistenceWF.ServiceReference1.AddItemResponse AddItem(testPersistenceWF.ServiceReference1.AddItemRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAddItem/AddItem", ReplyAction="http://tempuri.org/IAddItem/AddItemResponse")]
        System.Threading.Tasks.Task<testPersistenceWF.ServiceReference1.AddItemResponse> AddItemAsync(testPersistenceWF.ServiceReference1.AddItemRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddItemRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public testPersistenceWF.ServiceReference1.AddItem AddItem;
        
        public AddItemRequest() {
        }
        
        public AddItemRequest(testPersistenceWF.ServiceReference1.AddItem AddItem) {
            this.AddItem = AddItem;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class AddItemResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/", Order=0)]
        public string @string;
        
        public AddItemResponse() {
        }
        
        public AddItemResponse(string @string) {
            this.@string = @string;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAddItemChannel : testPersistenceWF.ServiceReference1.IAddItem, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddItemClient : System.ServiceModel.ClientBase<testPersistenceWF.ServiceReference1.IAddItem>, testPersistenceWF.ServiceReference1.IAddItem {
        
        public AddItemClient() {
        }
        
        public AddItemClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AddItemClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddItemClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AddItemClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        testPersistenceWF.ServiceReference1.AddItemResponse testPersistenceWF.ServiceReference1.IAddItem.AddItem(testPersistenceWF.ServiceReference1.AddItemRequest request) {
            return base.Channel.AddItem(request);
        }
        
        public string AddItem(testPersistenceWF.ServiceReference1.AddItem AddItem1) {
            testPersistenceWF.ServiceReference1.AddItemRequest inValue = new testPersistenceWF.ServiceReference1.AddItemRequest();
            inValue.AddItem = AddItem1;
            testPersistenceWF.ServiceReference1.AddItemResponse retVal = ((testPersistenceWF.ServiceReference1.IAddItem)(this)).AddItem(inValue);
            return retVal.@string;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<testPersistenceWF.ServiceReference1.AddItemResponse> testPersistenceWF.ServiceReference1.IAddItem.AddItemAsync(testPersistenceWF.ServiceReference1.AddItemRequest request) {
            return base.Channel.AddItemAsync(request);
        }
        
        public System.Threading.Tasks.Task<testPersistenceWF.ServiceReference1.AddItemResponse> AddItemAsync(testPersistenceWF.ServiceReference1.AddItem AddItem) {
            testPersistenceWF.ServiceReference1.AddItemRequest inValue = new testPersistenceWF.ServiceReference1.AddItemRequest();
            inValue.AddItem = AddItem;
            return ((testPersistenceWF.ServiceReference1.IAddItem)(this)).AddItemAsync(inValue);
        }
    }
}
